{
  "stats": {
    "suites": 1,
    "tests": 7,
    "passes": 7,
    "pending": 0,
    "failures": 0,
    "start": "2025-07-29T11:14:43.069Z",
    "end": "2025-07-29T11:14:50.230Z",
    "duration": 7161,
    "testsRegistered": 7,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "4831d089-dfc2-495d-abd1-3b9039ae351b",
      "title": "",
      "fullFile": "C:\\Users\\levoo\\Desktop\\web-app-e2e-automation\\selenium-e2e-tests\\todo_tests.js",
      "file": "\\todo_tests.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "73d0e9c2-ede3-454f-88fd-0cc4147d8f60",
          "title": "Secure Todo App E2E Tests",
          "fullFile": "C:\\Users\\levoo\\Desktop\\web-app-e2e-automation\\selenium-e2e-tests\\todo_tests.js",
          "file": "\\todo_tests.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Secure Todo App E2E Tests\"",
              "fullTitle": "Secure Todo App E2E Tests \"before all\" hook in \"Secure Todo App E2E Tests\"",
              "timedOut": false,
              "duration": 704,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log('GLOBAL SETUP: Launching browser once for all tests...');\ndriver = await new Builder().forBrowser('chrome').build();\nconsole.log('GLOBAL SETUP: Browser launched.');",
              "err": {},
              "uuid": "b7732f2a-3619-40b6-8f76-10db1177a704",
              "parentUUID": "73d0e9c2-ede3-454f-88fd-0cc4147d8f60",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook in \"Secure Todo App E2E Tests\"",
              "fullTitle": "Secure Todo App E2E Tests \"before each\" hook in \"Secure Todo App E2E Tests\"",
              "timedOut": false,
              "duration": 45,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log('BEFORE EACH: Starting per-test setup (resetting backend and navigating to app)...');\nconsole.log('BEFORE EACH: Target URL for React app: http://localhost:3000');\ntry {\n    console.log('BEFORE EACH: Calling API to reset backend todos...');\n    await axios.post(`${API_URL}/reset-todos`);\n    console.log('BEFORE EACH: Backend todos successfully reset.');\n} catch (error) {\n    console.error('BEFORE EACH: Error resetting backend todos:', error.message);\n    throw new Error('Failed to reset backend todos, skipping tests.');\n}\nconsole.log('BEFORE EACH: Navigating to React application (http://localhost:3000)...');\nawait driver.get('http://localhost:3000');\nconsole.log('BEFORE EACH: Page successfully loaded (driver.get completed).');\nconsole.log('BEFORE EACH: Waiting for app title element (id=\"app-title\")....');\nawait driver.wait(until.elementLocated(By.id('app-title')), 10000);\nconsole.log('BEFORE EACH: App title found. Page ready for interaction.');",
              "err": {},
              "uuid": "89df8dee-036f-4075-afbc-5120d4a849d4",
              "parentUUID": "73d0e9c2-ede3-454f-88fd-0cc4147d8f60",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Secure Todo App E2E Tests\"",
              "fullTitle": "Secure Todo App E2E Tests \"after all\" hook in \"Secure Todo App E2E Tests\"",
              "timedOut": false,
              "duration": 41,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log('GLOBAL TEARDOWN: All tests completed. Performing final cleanup and closing browser...');\ntry {\n    await axios.post(`${API_URL}/reset-todos`);\n    console.log('GLOBAL TEARDOWN: Backend todos successfully reset after all tests.');\n} catch (error) {\n    console.error('GLOBAL TEARDOWN: Error resetting todos after all tests:', error.message);\n}\nif (driver) {\n    await driver.quit();\n    console.log('GLOBAL TEARDOWN: Browser successfully closed.');\n}",
              "err": {},
              "uuid": "7880268f-6b70-4c85-8d5a-f75b913e2659",
              "parentUUID": "73d0e9c2-ede3-454f-88fd-0cc4147d8f60",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook in \"Secure Todo App E2E Tests\"",
              "fullTitle": "Secure Todo App E2E Tests \"after each\" hook in \"Secure Todo App E2E Tests\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log('AFTER EACH: Cleaning up after test (no browser close).');",
              "err": {},
              "uuid": "63518caa-9675-4d9a-a56d-35a98c6514e0",
              "parentUUID": "73d0e9c2-ede3-454f-88fd-0cc4147d8f60",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should allow user to login with valid credentials",
              "fullTitle": "Secure Todo App E2E Tests should allow user to login with valid credentials",
              "timedOut": false,
              "duration": 457,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log('TEST: Starting valid login test...');\nawait driver.findElement(By.id('username')).sendKeys('testuser');\nawait driver.findElement(By.id('password')).sendKeys('password123');\nawait driver.findElement(By.id('login-button')).click();\nawait driver.wait(until.elementLocated(By.id('welcome-message')), 10000);\nconst welcomeMessage = await driver.findElement(By.id('welcome-message')).getText();\nexpect(welcomeMessage).to.include('Welcome!');\nconsole.log('TEST: Valid login test PASSED.');",
              "err": {},
              "uuid": "1f9ac667-e182-4b5d-9212-0d777270b332",
              "parentUUID": "73d0e9c2-ede3-454f-88fd-0cc4147d8f60",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not allow user to login with invalid credentials",
              "fullTitle": "Secure Todo App E2E Tests should not allow user to login with invalid credentials",
              "timedOut": false,
              "duration": 395,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log('TEST: Starting invalid login test...');\nawait driver.findElement(By.id('username')).sendKeys('wronguser');\nawait driver.findElement(By.id('password')).sendKeys('wrongpassword');\nawait driver.findElement(By.id('login-button')).click();\nawait driver.wait(until.elementLocated(By.id('login-message')), 10000);\nconst errorMessage = await driver.findElement(By.id('login-message')).getText();\nexpect(errorMessage).to.include('Invalid username or password.');\nconsole.log('TEST: Invalid login test PASSED.');",
              "err": {},
              "uuid": "c953ea86-2380-4c94-abdf-8b6cd9aa893e",
              "parentUUID": "73d0e9c2-ede3-454f-88fd-0cc4147d8f60",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should allow a logged-in user to create a new todo item",
              "fullTitle": "Secure Todo App E2E Tests should allow a logged-in user to create a new todo item",
              "timedOut": false,
              "duration": 728,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log('TEST: Starting todo creation test...');\nawait driver.findElement(By.id('username')).sendKeys('testuser');\nawait driver.findElement(By.id('password')).sendKeys('password123');\nawait driver.findElement(By.id('login-button')).click();\nawait driver.wait(until.elementLocated(By.id('welcome-message')), 10000);\nconst newTodoInput = await driver.findElement(By.id('new-todo-input'));\nawait newTodoInput.sendKeys('My first todo item', Key.RETURN);\nawait driver.wait(until.elementLocated(By.xpath(`//li[contains(@id, 'todo-item-') and .//span[text()='My first todo item']]`)), 10000);\nconst todoItem = await driver.findElement(By.xpath(\"//li[contains(@id, 'todo-item-') and .//span[text()='My first todo item']]\"));\nexpect(await todoItem.isDisplayed()).to.be.true;\nexpect(await todoItem.getText()).to.include('My first todo item');\nconsole.log('TEST: Todo creation test PASSED.');",
              "err": {},
              "uuid": "cddf4555-77f9-45c7-993b-567bf3acab45",
              "parentUUID": "73d0e9c2-ede3-454f-88fd-0cc4147d8f60",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should allow a logged-in user to edit an existing todo item",
              "fullTitle": "Secure Todo App E2E Tests should allow a logged-in user to edit an existing todo item",
              "timedOut": false,
              "duration": 1133,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log('TEST: Starting todo editing test...');\nawait driver.findElement(By.id('username')).sendKeys('testuser');\nawait driver.findElement(By.id('password')).sendKeys('password123');\nawait driver.findElement(By.id('login-button')).click();\nawait driver.wait(until.elementLocated(By.id('welcome-message')), 10000);\nconst newTodoInput = await driver.findElement(By.id('new-todo-input'));\nconst addTodoButton = await driver.findElement(By.id('add-todo-button'));\nconst originalTodoText = 'Original Todo Text';\nawait newTodoInput.sendKeys(originalTodoText);\nawait addTodoButton.click();\nawait driver.wait(until.elementLocated(By.xpath(`//li[contains(@id, 'todo-item-') and .//span[text()='${originalTodoText}']]`)), 10000);\nconst todoItem = await driver.findElement(By.xpath(`//li[contains(@id, 'todo-item-') and .//span[text()='${originalTodoText}']]`));\nconst todoIdPart = (await todoItem.getAttribute('id')).split('-')[2];\nconst editButton = await todoItem.findElement(By.id(`edit-todo-button-${todoIdPart}`));\nawait editButton.click();\nconst editedTodoText = 'Todo Updated';\nconst editTodoInput = await driver.wait(until.elementLocated(By.id(`edit-todo-input-${todoIdPart}`)), 5000);\nawait editTodoInput.clear();\nawait editTodoInput.sendKeys(editedTodoText);\nconst saveButton = await todoItem.findElement(By.id(`save-todo-button-${todoIdPart}`));\nawait saveButton.click();\nawait driver.wait(until.elementLocated(By.xpath(`//li[contains(@id, 'todo-item-') and .//span[text()='${editedTodoText}']]`)), 15000);\nconst updatedTodoItem = await driver.findElement(By.xpath(`//li[contains(@id, 'todo-item-') and .//span[text()='${editedTodoText}']]`));\nexpect(await updatedTodoItem.isDisplayed()).to.be.true;\nexpect(await updatedTodoItem.getText()).to.include(editedTodoText);\nconsole.log('TEST: Todo editing test PASSED.');",
              "err": {},
              "uuid": "ec561774-84db-4159-bbe1-5e98c89a5c36",
              "parentUUID": "73d0e9c2-ede3-454f-88fd-0cc4147d8f60",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should allow a logged-in user to delete an existing todo item",
              "fullTitle": "Secure Todo App E2E Tests should allow a logged-in user to delete an existing todo item",
              "timedOut": false,
              "duration": 1022,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log('TEST: Starting todo deletion test...');\nawait driver.findElement(By.id('username')).sendKeys('testuser');\nawait driver.findElement(By.id('password')).sendKeys('password123');\nawait driver.findElement(By.id('login-button')).click();\nawait driver.wait(until.elementLocated(By.id('welcome-message')), 10000);\nconst newTodoInput = await driver.findElement(By.id('new-todo-input'));\nconst addTodoButton = await driver.findElement(By.id('add-todo-button'));\nconst todoText = 'Todo to be deleted';\nawait newTodoInput.sendKeys(todoText);\nawait addTodoButton.click();\nconst addedTodoItem = await driver.wait(until.elementLocated(By.xpath(`//li[contains(@id, 'todo-item-') and .//span[text()='${todoText}']]`)), 10000);\nconst todoIdPart = (await addedTodoItem.getAttribute('id')).split('-')[2];\nconst deleteButton = await addedTodoItem.findElement(By.id(`delete-todo-button-${todoIdPart}`));\nawait deleteButton.click();\nawait driver.wait(until.stalenessOf(addedTodoItem), 10000);\nawait driver.wait(until.elementLocated(By.id('no-todos-message')), 10000);\nconst noTodosMessage = await driver.findElement(By.id('no-todos-message')).getText();\nexpect(noTodosMessage).to.include('No todos yet. Add one!');\nconsole.log('TEST: Todo deletion test PASSED.');",
              "err": {},
              "uuid": "a635ac05-aa64-4ad4-93b8-b22f7b6a4a2d",
              "parentUUID": "73d0e9c2-ede3-454f-88fd-0cc4147d8f60",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should confirm the existence of expected data after actions (e.g. after adding multiple items)",
              "fullTitle": "Secure Todo App E2E Tests should confirm the existence of expected data after actions (e.g. after adding multiple items)",
              "timedOut": false,
              "duration": 1350,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log('TEST: Starting multi-item add and verification test...');\nawait driver.findElement(By.id('username')).sendKeys('testuser');\nawait driver.findElement(By.id('password')).sendKeys('password123');\nawait driver.findElement(By.id('login-button')).click();\nawait driver.wait(until.elementLocated(By.id('welcome-message')), 10000);\nconst newTodoInput = await driver.findElement(By.id('new-todo-input'));\nconst addTodoButton = await driver.findElement(By.id('add-todo-button'));\nconst todoTexts = ['Task A', 'Task B', 'Task C'];\nfor (const text of todoTexts) {\n    await newTodoInput.sendKeys(text);\n    await addTodoButton.click();\n    await driver.wait(until.elementLocated(By.xpath(`//li[contains(@id, 'todo-item-') and .//span[text()='${text}']]`)), 10000);\n    console.log(`TEST: \"${text}\" added and verified.`);\n}\nconst allTodoItems = await driver.findElements(By.css('#todo-list li span'));\nexpect(allTodoItems.length).to.equal(todoTexts.length);\nfor (let i = 0; i < todoTexts.length; i++) {\n    expect(await allTodoItems[i].getText()).to.equal(todoTexts[i]);\n}\nconsole.log('TEST: Multi-item add and verification test PASSED.');",
              "err": {},
              "uuid": "5abf9df3-d2d2-466e-a75d-bc04f20f6dbf",
              "parentUUID": "73d0e9c2-ede3-454f-88fd-0cc4147d8f60",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should allow user to logout and return to login screen",
              "fullTitle": "Secure Todo App E2E Tests should allow user to logout and return to login screen",
              "timedOut": false,
              "duration": 435,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log('TEST: Starting logout test...');\nawait driver.findElement(By.id('username')).sendKeys('testuser');\nawait driver.findElement(By.id('password')).sendKeys('password123');\nawait driver.findElement(By.id('login-button')).click();\nawait driver.wait(until.elementLocated(By.id('welcome-message')), 10000);\nawait driver.findElement(By.id('logout-button')).click();\nawait driver.wait(until.elementLocated(By.id('login-button')), 10000);\nconst loginButton = await driver.findElement(By.id('login-button'));\nexpect(await loginButton.isDisplayed()).to.be.true;\nconsole.log('TEST: Logout test PASSED.');",
              "err": {},
              "uuid": "4ebd24d5-be87-4666-bf2d-48186f4a4f0c",
              "parentUUID": "73d0e9c2-ede3-454f-88fd-0cc4147d8f60",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1f9ac667-e182-4b5d-9212-0d777270b332",
            "c953ea86-2380-4c94-abdf-8b6cd9aa893e",
            "cddf4555-77f9-45c7-993b-567bf3acab45",
            "ec561774-84db-4159-bbe1-5e98c89a5c36",
            "a635ac05-aa64-4ad4-93b8-b22f7b6a4a2d",
            "5abf9df3-d2d2-466e-a75d-bc04f20f6dbf",
            "4ebd24d5-be87-4666-bf2d-48186f4a4f0c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5520,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.8.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}